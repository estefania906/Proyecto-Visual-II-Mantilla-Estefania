// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ModeloDB;

namespace ModeloDB.Migrations
{
    [DbContext(typeof(ModeloDB))]
    [Migration("20220120055807_DBIni2")]
    partial class DBIni2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Modelo.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApellidoCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CedulaCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonoCliente")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClienteId");

                    b.ToTable("cliente");
                });

            modelBuilder.Entity("Modelo.Cliente_Det", b =>
                {
                    b.Property<int>("ClienteDetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.HasKey("ClienteDetId");

                    b.HasIndex("ClienteId");

                    b.ToTable("cliente_det");
                });

            modelBuilder.Entity("Modelo.Comportamiento_Cliente", b =>
                {
                    b.Property<int>("ComportamientClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CalculoDeudasCliente")
                        .HasColumnType("bit");

                    b.Property<int>("ClienteDetId")
                        .HasColumnType("int");

                    b.Property<double>("Deuda_casas_comerciales")
                        .HasColumnType("float");

                    b.Property<double>("Deuda_otras_entidades_financieras")
                        .HasColumnType("float");

                    b.Property<DateTime>("fecha_deuda")
                        .HasColumnType("datetime2");

                    b.HasKey("ComportamientClienteId");

                    b.HasIndex("ClienteDetId");

                    b.ToTable("comportamiento_cliente");
                });

            modelBuilder.Entity("Modelo.Comportamiento_Garante", b =>
                {
                    b.Property<int>("ComportamientGaranteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CalculoDeudasGarante")
                        .HasColumnType("bit");

                    b.Property<double>("Deuda_casas_comerciales")
                        .HasColumnType("float");

                    b.Property<double>("Deuda_otras_entidades_financieras")
                        .HasColumnType("float");

                    b.Property<int>("GaranteDetId")
                        .HasColumnType("int");

                    b.Property<DateTime>("fecha_deuda")
                        .HasColumnType("datetime2");

                    b.HasKey("ComportamientGaranteId");

                    b.HasIndex("GaranteDetId");

                    b.ToTable("comportamiento_garante");
                });

            modelBuilder.Entity("Modelo.Costo_Cuota", b =>
                {
                    b.Property<int>("CostoCuotaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CalculoAmortizacion")
                        .HasColumnType("float");

                    b.Property<double>("CalculoCuota")
                        .HasColumnType("float");

                    b.Property<double>("CalculoPagoTotal")
                        .HasColumnType("float");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int?>("Cliente_DetClienteDetId")
                        .HasColumnType("int");

                    b.Property<double>("MontoSolicitado")
                        .HasColumnType("float");

                    b.Property<double>("NumeroCuotas")
                        .HasColumnType("float");

                    b.Property<double>("TasaAnual")
                        .HasColumnType("float");

                    b.HasKey("CostoCuotaId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("Cliente_DetClienteDetId");

                    b.ToTable("costo_cuota");
                });

            modelBuilder.Entity("Modelo.Declaracion_Patrimonio_Cliente", b =>
                {
                    b.Property<int>("DeclaracionPatrimonioClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AvaluoBienMunicipio")
                        .HasColumnType("float");

                    b.Property<double>("AvaluoBienParticular")
                        .HasColumnType("float");

                    b.Property<bool>("CalculoPatrimonioCliente")
                        .HasColumnType("bit");

                    b.Property<int>("ClienteDetId")
                        .HasColumnType("int");

                    b.Property<string>("NombreBien")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DeclaracionPatrimonioClienteId");

                    b.HasIndex("ClienteDetId");

                    b.ToTable("declaracion_cliente");
                });

            modelBuilder.Entity("Modelo.Declaracion_Patrimonio_Garante", b =>
                {
                    b.Property<int>("DeclaracionPatrimonioGaranteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AvaluoBienMunicipio")
                        .HasColumnType("float");

                    b.Property<double>("AvaluoBienParticular")
                        .HasColumnType("float");

                    b.Property<bool>("CalculoPatrimonioGarante")
                        .HasColumnType("bit");

                    b.Property<int>("GaranteDetId")
                        .HasColumnType("int");

                    b.Property<string>("NombreBien")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DeclaracionPatrimonioGaranteId");

                    b.HasIndex("GaranteDetId");

                    b.ToTable("declaracion_garante");
                });

            modelBuilder.Entity("Modelo.Garante", b =>
                {
                    b.Property<int>("GaranteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApellidoGarante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CedulaGarante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("NombreGarante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonoGarante")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GaranteId");

                    b.HasIndex("ClienteId");

                    b.ToTable("garante");
                });

            modelBuilder.Entity("Modelo.Garante_Det", b =>
                {
                    b.Property<int>("GaranteDetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GaranteId")
                        .HasColumnType("int");

                    b.HasKey("GaranteDetId");

                    b.HasIndex("GaranteId");

                    b.ToTable("garante_det");
                });

            modelBuilder.Entity("Modelo.Gastos_Cliente", b =>
                {
                    b.Property<int>("GastosId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteDetId")
                        .HasColumnType("int");

                    b.Property<bool>("aprobacion_gastos")
                        .HasColumnType("bit");

                    b.Property<double>("gasto_agua")
                        .HasColumnType("float");

                    b.Property<double>("gasto_internet")
                        .HasColumnType("float");

                    b.Property<double>("gasto_luz")
                        .HasColumnType("float");

                    b.Property<double>("gasto_telefono")
                        .HasColumnType("float");

                    b.Property<double>("gastos_totales")
                        .HasColumnType("float");

                    b.HasKey("GastosId");

                    b.HasIndex("ClienteDetId");

                    b.ToTable("gastos_cliente");
                });

            modelBuilder.Entity("Modelo.Historial_Cliente", b =>
                {
                    b.Property<int>("HistorialClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CantidadPagada")
                        .HasColumnType("float");

                    b.Property<double>("CantidadSolicitada")
                        .HasColumnType("float");

                    b.Property<int>("ClienteDetId")
                        .HasColumnType("int");

                    b.Property<bool>("DiasRetrasoCliente")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaPagoReal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaPagoSolicitada")
                        .HasColumnType("datetime2");

                    b.Property<double>("NumeroCuota")
                        .HasColumnType("float");

                    b.Property<double>("Saldo")
                        .HasColumnType("float");

                    b.HasKey("HistorialClienteId");

                    b.HasIndex("ClienteDetId");

                    b.ToTable("historial_cliente");
                });

            modelBuilder.Entity("Modelo.Historial_Garante", b =>
                {
                    b.Property<int>("HistorialGaranteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CantidadPagada")
                        .HasColumnType("float");

                    b.Property<double>("CantidadSolicitada")
                        .HasColumnType("float");

                    b.Property<bool>("DiasRetrasoGarante")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaPagoReal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaPagoSolicitada")
                        .HasColumnType("datetime2");

                    b.Property<int>("GaranteDetId")
                        .HasColumnType("int");

                    b.Property<double>("NumeroCuota")
                        .HasColumnType("float");

                    b.Property<double>("Saldo")
                        .HasColumnType("float");

                    b.HasKey("HistorialGaranteId");

                    b.HasIndex("GaranteDetId");

                    b.ToTable("historial_garante");
                });

            modelBuilder.Entity("Modelo.Cliente_Det", b =>
                {
                    b.HasOne("Modelo.Cliente", "Cliente")
                        .WithMany("Cliente_Det")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Modelo.Comportamiento_Cliente", b =>
                {
                    b.HasOne("Modelo.Cliente_Det", "Cliente_Det")
                        .WithMany("Comportamiento_Cliente")
                        .HasForeignKey("ClienteDetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente_Det");
                });

            modelBuilder.Entity("Modelo.Comportamiento_Garante", b =>
                {
                    b.HasOne("Modelo.Garante_Det", "Garante_Det")
                        .WithMany("Comportamiento_Garante")
                        .HasForeignKey("GaranteDetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Garante_Det");
                });

            modelBuilder.Entity("Modelo.Costo_Cuota", b =>
                {
                    b.HasOne("Modelo.Cliente", "Cliente")
                        .WithMany("Costo_Cuota")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Modelo.Cliente_Det", null)
                        .WithMany("Costo_Cuota")
                        .HasForeignKey("Cliente_DetClienteDetId");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Modelo.Declaracion_Patrimonio_Cliente", b =>
                {
                    b.HasOne("Modelo.Cliente_Det", "Cliente_Det")
                        .WithMany("Declaracion_Patrimonio_Cliente")
                        .HasForeignKey("ClienteDetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente_Det");
                });

            modelBuilder.Entity("Modelo.Declaracion_Patrimonio_Garante", b =>
                {
                    b.HasOne("Modelo.Garante_Det", "Garante_Det")
                        .WithMany("Declaracion_Patrimonio_Garante")
                        .HasForeignKey("GaranteDetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Garante_Det");
                });

            modelBuilder.Entity("Modelo.Garante", b =>
                {
                    b.HasOne("Modelo.Cliente", "Cliente")
                        .WithMany("Garante")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Modelo.Garante_Det", b =>
                {
                    b.HasOne("Modelo.Garante", "Garante")
                        .WithMany("Garante_Det")
                        .HasForeignKey("GaranteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Garante");
                });

            modelBuilder.Entity("Modelo.Gastos_Cliente", b =>
                {
                    b.HasOne("Modelo.Cliente_Det", "Cliente_Det")
                        .WithMany("Gasto_Cliente")
                        .HasForeignKey("ClienteDetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente_Det");
                });

            modelBuilder.Entity("Modelo.Historial_Cliente", b =>
                {
                    b.HasOne("Modelo.Cliente_Det", "Cliente_Det")
                        .WithMany("Historial_Cliente")
                        .HasForeignKey("ClienteDetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente_Det");
                });

            modelBuilder.Entity("Modelo.Historial_Garante", b =>
                {
                    b.HasOne("Modelo.Garante_Det", "Garante_Det")
                        .WithMany("Historial_Garante")
                        .HasForeignKey("GaranteDetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Garante_Det");
                });

            modelBuilder.Entity("Modelo.Cliente", b =>
                {
                    b.Navigation("Cliente_Det");

                    b.Navigation("Costo_Cuota");

                    b.Navigation("Garante");
                });

            modelBuilder.Entity("Modelo.Cliente_Det", b =>
                {
                    b.Navigation("Comportamiento_Cliente");

                    b.Navigation("Costo_Cuota");

                    b.Navigation("Declaracion_Patrimonio_Cliente");

                    b.Navigation("Gasto_Cliente");

                    b.Navigation("Historial_Cliente");
                });

            modelBuilder.Entity("Modelo.Garante", b =>
                {
                    b.Navigation("Garante_Det");
                });

            modelBuilder.Entity("Modelo.Garante_Det", b =>
                {
                    b.Navigation("Comportamiento_Garante");

                    b.Navigation("Declaracion_Patrimonio_Garante");

                    b.Navigation("Historial_Garante");
                });
#pragma warning restore 612, 618
        }
    }
}
