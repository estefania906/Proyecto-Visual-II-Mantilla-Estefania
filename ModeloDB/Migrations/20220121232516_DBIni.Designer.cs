// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ModeloDB;

namespace ModeloDB.Migrations
{
    [DbContext(typeof(ModeloDB))]
    [Migration("20220121232516_DBIni")]
    partial class DBIni
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Modelo.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApellidoCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CedulaCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GaranteId")
                        .HasColumnType("int");

                    b.Property<string>("NombreCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonoCliente")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClienteId");

                    b.HasIndex("GaranteId")
                        .IsUnique();

                    b.ToTable("cliente");
                });

            modelBuilder.Entity("Modelo.Cliente_Det", b =>
                {
                    b.Property<int>("ClienteDetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AvaluoBienParticular")
                        .HasColumnType("float");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<double>("Deuda_otros_bancos")
                        .HasColumnType("float");

                    b.Property<double>("Gastos_cliente")
                        .HasColumnType("float");

                    b.Property<double>("ingreso_mensual_cliente")
                        .HasColumnType("float");

                    b.HasKey("ClienteDetId");

                    b.HasIndex("ClienteId");

                    b.ToTable("cliente_det");
                });

            modelBuilder.Entity("Modelo.Configuracion", b =>
                {
                    b.Property<int>("VigenciaTasaAnualId")
                        .HasColumnType("int");

                    b.Property<double>("meses_tope")
                        .HasColumnType("float");

                    b.HasIndex("VigenciaTasaAnualId");

                    b.ToTable("configuracion");
                });

            modelBuilder.Entity("Modelo.Costo_Cuota", b =>
                {
                    b.Property<int>("CostoCuotaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CalculoAmortizacion")
                        .HasColumnType("float");

                    b.Property<double>("CalculoCuota")
                        .HasColumnType("float");

                    b.Property<double>("CalculoPagoTotal")
                        .HasColumnType("float");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int?>("Cliente_DetClienteDetId")
                        .HasColumnType("int");

                    b.Property<double>("InteresMensual")
                        .HasColumnType("float");

                    b.Property<double>("MontoSolicitado")
                        .HasColumnType("float");

                    b.Property<double>("NumeroCuotas")
                        .HasColumnType("float");

                    b.Property<double>("TasaAnual")
                        .HasColumnType("float");

                    b.Property<int>("VigenciaTasaAnaulId")
                        .HasColumnType("int");

                    b.HasKey("CostoCuotaId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("Cliente_DetClienteDetId");

                    b.HasIndex("VigenciaTasaAnaulId");

                    b.ToTable("costo_cuota");
                });

            modelBuilder.Entity("Modelo.Credito", b =>
                {
                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("CostoCuotaId")
                        .HasColumnType("int");

                    b.HasKey("ClienteId", "CostoCuotaId");

                    b.HasIndex("CostoCuotaId");

                    b.ToTable("credito");
                });

            modelBuilder.Entity("Modelo.Garante", b =>
                {
                    b.Property<int>("GaranteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApellidoGarante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CedulaGarante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreGarante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonoGarante")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GaranteId");

                    b.ToTable("garante");
                });

            modelBuilder.Entity("Modelo.Garante_Det", b =>
                {
                    b.Property<int>("GaranteDetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AvaluoBienParticular")
                        .HasColumnType("float");

                    b.Property<double>("Deuda_otros_bancos")
                        .HasColumnType("float");

                    b.Property<int>("GaranteId")
                        .HasColumnType("int");

                    b.Property<double>("Gastos_garante")
                        .HasColumnType("float");

                    b.Property<double>("ingreso_mensual_garante")
                        .HasColumnType("float");

                    b.HasKey("GaranteDetId");

                    b.HasIndex("GaranteId");

                    b.ToTable("garante_det");
                });

            modelBuilder.Entity("Modelo.Historial_Cliente", b =>
                {
                    b.Property<int>("HistorialClienteId")
                        .HasColumnType("int");

                    b.Property<double>("CantidadPagada")
                        .HasColumnType("float");

                    b.Property<double>("CantidadSolicitada")
                        .HasColumnType("float");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("DiasRetrasoCliente")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaPagoReal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaPagoSolicitada")
                        .HasColumnType("datetime2");

                    b.Property<double>("NumeroCuota")
                        .HasColumnType("float");

                    b.Property<double>("Saldo")
                        .HasColumnType("float");

                    b.HasKey("HistorialClienteId");

                    b.ToTable("historial_cliente");
                });

            modelBuilder.Entity("Modelo.Historial_Garante", b =>
                {
                    b.Property<int>("HistorialGaranteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CantidadPagada")
                        .HasColumnType("float");

                    b.Property<double>("CantidadSolicitada")
                        .HasColumnType("float");

                    b.Property<int>("DiasRetrasoGarante")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaPagoReal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaPagoSolicitada")
                        .HasColumnType("datetime2");

                    b.Property<int>("GaranteId")
                        .HasColumnType("int");

                    b.Property<double>("NumeroCuota")
                        .HasColumnType("float");

                    b.Property<double>("Saldo")
                        .HasColumnType("float");

                    b.HasKey("HistorialGaranteId");

                    b.HasIndex("GaranteId");

                    b.ToTable("historial_garante");
                });

            modelBuilder.Entity("Modelo.Validaciones", b =>
                {
                    b.Property<int>("ValidacionesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("GaranteId")
                        .HasColumnType("int");

                    b.Property<int>("HistorialClienteId")
                        .HasColumnType("int");

                    b.Property<int>("HistorialGaranteId")
                        .HasColumnType("int");

                    b.Property<bool>("val_comportamiento_cliente")
                        .HasColumnType("bit");

                    b.Property<bool>("val_comportamiento_garante")
                        .HasColumnType("bit");

                    b.Property<bool>("val_historial_cliente")
                        .HasColumnType("bit");

                    b.Property<bool>("val_historial_garante")
                        .HasColumnType("bit");

                    b.Property<bool>("val_patrimonio_cliente")
                        .HasColumnType("bit");

                    b.Property<bool>("val_patrimonio_garante")
                        .HasColumnType("bit");

                    b.HasKey("ValidacionesId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("GaranteId");

                    b.HasIndex("HistorialClienteId");

                    b.HasIndex("HistorialGaranteId");

                    b.ToTable("validaciones");
                });

            modelBuilder.Entity("Modelo.VigenciaTasaAnual", b =>
                {
                    b.Property<int>("VigenciaTasaAnualId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("fecha_fin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fecha_inicio")
                        .HasColumnType("datetime2");

                    b.Property<double>("tasa_anual")
                        .HasColumnType("float");

                    b.HasKey("VigenciaTasaAnualId");

                    b.ToTable("vigencia");
                });

            modelBuilder.Entity("Modelo.Cliente", b =>
                {
                    b.HasOne("Modelo.Garante", "Garante")
                        .WithOne("Cliente")
                        .HasForeignKey("Modelo.Cliente", "GaranteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Garante");
                });

            modelBuilder.Entity("Modelo.Cliente_Det", b =>
                {
                    b.HasOne("Modelo.Cliente", "Cliente")
                        .WithMany("Cliente_Det")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Modelo.Configuracion", b =>
                {
                    b.HasOne("Modelo.VigenciaTasaAnual", "Vigencia")
                        .WithMany()
                        .HasForeignKey("VigenciaTasaAnualId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vigencia");
                });

            modelBuilder.Entity("Modelo.Costo_Cuota", b =>
                {
                    b.HasOne("Modelo.Cliente", "Cliente")
                        .WithMany("Costo_Cuota")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Modelo.Cliente_Det", null)
                        .WithMany("Costo_Cuota")
                        .HasForeignKey("Cliente_DetClienteDetId");

                    b.HasOne("Modelo.VigenciaTasaAnual", "VigenciaTasaAnual")
                        .WithMany("Costo_Cuota")
                        .HasForeignKey("VigenciaTasaAnaulId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("VigenciaTasaAnual");
                });

            modelBuilder.Entity("Modelo.Credito", b =>
                {
                    b.HasOne("Modelo.Cliente", "Cliente")
                        .WithMany("Credito")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Modelo.Costo_Cuota", "Costo_Cuota")
                        .WithMany("Credito")
                        .HasForeignKey("CostoCuotaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Costo_Cuota");
                });

            modelBuilder.Entity("Modelo.Garante_Det", b =>
                {
                    b.HasOne("Modelo.Garante", "Garante")
                        .WithMany("Garante_Det")
                        .HasForeignKey("GaranteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Garante");
                });

            modelBuilder.Entity("Modelo.Historial_Cliente", b =>
                {
                    b.HasOne("Modelo.Cliente", "Cliente")
                        .WithMany("Historial_Cliente")
                        .HasForeignKey("HistorialClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Modelo.Historial_Garante", b =>
                {
                    b.HasOne("Modelo.Garante", "Garante")
                        .WithMany("Historial_Garante")
                        .HasForeignKey("GaranteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Garante");
                });

            modelBuilder.Entity("Modelo.Validaciones", b =>
                {
                    b.HasOne("Modelo.Cliente", "Cliente")
                        .WithMany("Validaciones")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Modelo.Garante", "Garante")
                        .WithMany("Validaciones")
                        .HasForeignKey("GaranteId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Modelo.Historial_Cliente", "Historial_Cliente")
                        .WithMany("Validaciones")
                        .HasForeignKey("HistorialClienteId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Modelo.Historial_Garante", "Historial_Garante")
                        .WithMany("Validaciones")
                        .HasForeignKey("HistorialGaranteId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Garante");

                    b.Navigation("Historial_Cliente");

                    b.Navigation("Historial_Garante");
                });

            modelBuilder.Entity("Modelo.Cliente", b =>
                {
                    b.Navigation("Cliente_Det");

                    b.Navigation("Costo_Cuota");

                    b.Navigation("Credito");

                    b.Navigation("Historial_Cliente");

                    b.Navigation("Validaciones");
                });

            modelBuilder.Entity("Modelo.Cliente_Det", b =>
                {
                    b.Navigation("Costo_Cuota");
                });

            modelBuilder.Entity("Modelo.Costo_Cuota", b =>
                {
                    b.Navigation("Credito");
                });

            modelBuilder.Entity("Modelo.Garante", b =>
                {
                    b.Navigation("Cliente");

                    b.Navigation("Garante_Det");

                    b.Navigation("Historial_Garante");

                    b.Navigation("Validaciones");
                });

            modelBuilder.Entity("Modelo.Historial_Cliente", b =>
                {
                    b.Navigation("Validaciones");
                });

            modelBuilder.Entity("Modelo.Historial_Garante", b =>
                {
                    b.Navigation("Validaciones");
                });

            modelBuilder.Entity("Modelo.VigenciaTasaAnual", b =>
                {
                    b.Navigation("Costo_Cuota");
                });
#pragma warning restore 612, 618
        }
    }
}
